@using CertificateManager.Entities
@using CertificateServices
@using CertificateServices.Enumerations

@page
@model InitialSetupConfigModel
@{
    Layout = "~/Views/Shared/_Layout.SbAdmin.light.InitialSetup.cshtml";
}


<form action="~/initial-setup" method="post" id="loginForm">

    <div class="card card-login mx-auto mt-5">
        <div class="card-body">
            <h3 style="text-align:center">Certificate Manager - Initial Setup</h3>
            <p style="text-align:center">
                Thank you for installing Certificate Manager. Please complete the initial setup to get started!
            </p>
        </div>
    </div>


    <div class="card card-login mx-auto mt-5">
        <div class="card-header">General Configuration</div>
        <div class="card-body">

            <div class="form-group">
                <label for="datastoreRootPath">Datastore Root Path</label>
                <input class="form-control" id="datastoreRootPath" name="datastoreRootPath" aria-describedby="emailHelp" placeholder="eg. d:\datastore">
            </div>

            <div class="form-group">
                <label for="localAdminUpn">Local Admin UserPrincipalName</label>
                <input class="form-control" id="localAdminUpn" name="localAdminUpn" type="text" readonly="readonly" value="administrator@certificatemanager.local">
            </div>

            <div class="form-group">
                <label for="localAdminPassword">Local Admin Password</label>
                <input class="form-control" id="localAdminPassword" name="localAdminPassword" type="password" placeholder="Password">
            </div>

            <div class="form-group">
                <label for="encryptionKey">EncryptionKey</label>
                <input class="form-control" id="encryptionKey" name="encryptionKey" type="text" readonly="readonly" value="@ViewBag.EncryptionKey">
            </div>

            <div class="form-group">
                <label for="emergencyAccessKey">Emergency Access Key</label>
                <input class="form-control" id="emergencyAccessKey" name="emergencyAccessKey" type="text" readonly="readonly" value="@ViewBag.EmergencyAccessKey">
            </div>

        </div>
    </div>




    <div class="card card-login mx-auto mt-5">
        <div class="card-header">Active Directory Setup (Used to authenticate users and to the certificate authorities)</div>
        <div class="card-body">
            <div class="form-group">
                <label for="datastoreRootPath">Display Name</label>
                <input class="form-control" id="adName" name="adName" placeholder="Primary Active Directory">
            </div>

            <div class="form-group">
                <label for="localAdminPassword">AD Domain Name</label>
                <input class="form-control" id="adServer" name="adServer" type="text" placeholder="eg. domain.com">
            </div>

            <div class="form-group">
                <label for="localAdminPassword">LDAP Search Base</label>
                <input class="form-control" id="adSearchBase" name="adSearchBase" type="text" placeholder="eg. DC=domain,DC=com">
            </div>

            <div class="form-group">
                <div class="form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" type="checkbox" id="adUseAppPoolIdentity"> Use IIS AppPoolIdentity to Connect to AD?
                    </label>
                </div>
            </div>

            <div class="form-group">
                <label for="adServiceAccountUsername">Service Account Username</label>
                <input class="form-control" id="adServiceAccountUsername" name="adServiceAccountUsername" type="text" placeholder="certmgrsvc">
            </div>

            <div class="form-group">
                <label for="adServiceAccountPassword">Service Account Password</label>
                <input class="form-control" id="adServiceAccountPassword" name="adServiceAccountPassword" type="text">
            </div>
        </div>
    </div>






    <div class="card card-login mx-auto mt-5">
        <div class="card-header">Active Directory Certificate Services - First Certificate Authority Setup</div>
        <div class="card-body">
            <div class="form-group">
                <label for="adcsServerName">Server Name</label>
                <input class="form-control" id="adcsServerName" name="adcsServerName" placeholder="ca.domain.com">
            </div>

            <div class="form-group">
                <label for="adcsCommonName">AD Domain Name</label>
                <input class="form-control" id="adcsCommonName" name="adcsCommonName" type="text" placeholder="Corporation Certificate Authority G1">
            </div>

            <div class="form-group">
                <label for="password">Hash Algorithm</label>
                <select class="form-control" name="AdcsHashAlgorithm" id="AdcsHashAlgorithm">
                    @foreach (var alg in Enum.GetNames(typeof(HashAlgorithm)))
                    {
                        if (alg == "SHA256")
                        {
                    <option selected="selected" value="@alg">@alg</option> }
                        else
                        {
                    <option value="@alg">@alg</option>}
                    }

                </select>
            </div>
        </div>
    </div>


    <div class="card card-login mx-auto mt-5">
        <div class="card-header">Active Directory Certificate Services - First Template Setup</div>
        <div class="card-body">
            <div class="form-group">
                <label for="adcsTemplateName">Template Name</label>
                <input class="form-control" id="adcsTemplateName" name="adcsTemplateName" placeholder="ServerAuthentication-CapiRsa">
            </div>


            <div class="form-group">
                <label for="adcsTemplateWindowsApi">Template Windows Api</label>
                <select class="form-control" name="adcsTemplateWindowsApi" id="adcsTemplateWindowsApi">
                    @foreach (var alg in Enum.GetNames(typeof(WindowsApi)))
                    {
                        if (alg == "Cng")
                        {
                            <option selected="selected" value="@alg">@alg</option> }
                        else
                        {
                            <option value="@alg">@alg</option>}
                    }

                </select>
            </div>


            <div class="form-group">
                <label for="adcsTemplateKeyUsage">Template Key Usage</label>
                <select class="form-control" name="adcsTemplateKeyUsage" id="adcsTemplateKeyUsage">
                    @foreach (var alg in Enum.GetNames(typeof(KeyUsage)))
                    {
                        if (alg == "ServerAuthentication")
                        {
                            <option selected="selected" value="@alg">@alg</option> }
                        else
                        {
                            <option value="@alg">@alg</option>}
                    }

                </select>
            </div>




            <div class="form-group">
                <label for="adcsTemplateCipher">Template Cipher Algorithm</label>
                <select class="form-control" name="adcsTemplateCipher" id="adcsTemplateCipher">
                    @foreach (var alg in Enum.GetNames(typeof(CipherAlgorithm)))
                    {
                        if (alg == "RSA")
                        {
                            <option selected="selected" value="@alg">@alg</option> }
                        else
                        {
                            <option value="@alg">@alg</option>}
                    }

                </select>
            </div>





        </div>
    </div>


    <input type="submit" class="btn btn-primary btn-block" style="margin-top:50px;" value="Complete Configuration" />

</form>

@section Script{
    <script>
        $(document).ready(function () {
            //Login.PageLoad();
        });
    </script>
}


@section Style{

    <style>
    </style>

}

